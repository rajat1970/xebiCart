{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ErrorView from '../Views/ErrorView';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchString: null,\n      productData: [],\n      filters: [],\n      cartElements: [],\n      cartCount: 0,\n      totalItemCount: [],\n      individualPrices: [],\n      brandFilterValue: '',\n      colorFilterValue: '',\n      minPriceFilterValue: '',\n      maxPriceFilterValue: '',\n      error: false\n    };\n\n    this.isButtonDisabled = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.indexOf(item => item.id === id);\n      if (totalItemCount[index].quantity === 0) return true;else return false;\n    };\n\n    this.searchOnchangeHandler = searchString => {\n      this.setState({\n        searchString: searchString\n      });\n    };\n\n    this.selectOnChangeHandler = selectValue => {\n      this.setState(selectValue);\n    };\n\n    this.colorAndBrandFilter = productData => {\n      productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true).filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true);\n      return productData;\n    };\n\n    this.filterSubmitHandler = () => {\n      if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')) && product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      }\n    };\n\n    this.removeFilter = () => {\n      axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n        console.log(\"hello from remove\");\n        this.setState({\n          productData: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          error: error.response\n        });\n      });\n    };\n\n    this.removeFromCart = id => {\n      const cartElements = [...this.state.cartElements];\n      const index = cartElements.findIndex(item => item === id); // cartElements = cartElements.filter(product => product !== id)\n\n      cartElements.splice(index, 1);\n      this.setState({\n        cartElements: cartElements,\n        cartCount: this.state.cartCount - 1\n      });\n    };\n\n    this.totalItemCountFinder = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.findIndex(item => item.id === id);\n      return totalItemCount[index].quantity;\n    };\n\n    this.individualItemPriceCalculator = id => {\n      const productData = [...this.state.productData];\n      const productDataIndex = productData.findIndex(item => item.id === id);\n      const price = productData[productDataIndex].price.final_price;\n      const totalItemCount = [...this.state.totalItemCount];\n      const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n      const count = totalItemCount[totalItemCountIndex].quantity;\n      const final_price = price * count; // this.setState({ hello: \"hello\" })\n      // this.updateIndividualPrices(final_price)\n\n      return final_price;\n    };\n\n    this.updateIndividualPrices = price => {\n      this.setState({\n        individualPrices: [...this.state.individualPrices, price]\n      });\n    };\n\n    this.totalItemCountIncrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.totalItemCountDecrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.handleDetails = () => {\n      console.log(\"hello from detail\");\n    };\n\n    this.handleAddtoCard = id => {\n      let allAddedElements = [...this.state.cartElements];\n\n      if (allAddedElements.indexOf(id) === -1) {\n        const array = [...this.state.cartElements, id];\n        this.setState({\n          cartElements: array,\n          cartCount: this.state.cartCount + 1\n        });\n        this.totalItemCountIncrementHandler(id);\n      } else {\n        alert(\"Item already added to cart! Please navigate to cart to update the quantity\");\n      } // this.setState({ cartElements: allAddedElements })\n      // const array = [...this.state.cartElements, id];\n      // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n      this.setState({\n        productData: response.data\n      }); // this.state.productData.map(product => console.log(product.discount))\n\n      this.state.productData.forEach(product => {\n        return this.setState({\n          totalItemCount: [...this.state.totalItemCount, {\n            id: product.id,\n            quantity: 0\n          }]\n        });\n      });\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/filters\").then(response => {\n      this.setState({\n        filters: response.data\n      });\n      console.log(response);\n    }).catch(error => {\n      this.setState({\n        error: error.response\n      });\n    });\n  } //Button Diable\n\n\n  render() {\n    return this.state.error === false ? /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        searchOnchangeHandler: this.searchOnchangeHandler,\n        selectOnChangeHandler: this.selectOnChangeHandler,\n        filterSubmitHandler: this.filterSubmitHandler,\n        handleDetails: this.handleDetails,\n        handleAddtoCard: this.handleAddtoCard,\n        totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n        totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n        totalItemCountFinder: this.totalItemCountFinder,\n        individualItemPriceCalculator: this.individualItemPriceCalculator,\n        removeFilter: this.removeFilter,\n        removeFromCart: this.removeFromCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }, this.props.children) : /*#__PURE__*/React.createElement(ErrorView, {\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js"],"names":["React","Component","axios","ErrorView","ProductContext","createContext","ProductProvider","state","searchString","productData","filters","cartElements","cartCount","totalItemCount","individualPrices","brandFilterValue","colorFilterValue","minPriceFilterValue","maxPriceFilterValue","error","isButtonDisabled","id","index","indexOf","item","quantity","searchOnchangeHandler","setState","selectOnChangeHandler","selectValue","colorAndBrandFilter","filter","product","title","toLowerCase","includes","colour","filterSubmitHandler","get","then","response","data","catch","price","final_price","parseInt","replace","removeFilter","console","log","removeFromCart","findIndex","splice","totalItemCountFinder","individualItemPriceCalculator","productDataIndex","totalItemCountIndex","count","updateIndividualPrices","totalItemCountIncrementHandler","prevState","totalItemCountDecrementHandler","handleDetails","handleAddtoCard","allAddedElements","array","alert","componentDidMount","forEach","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport ErrorView from '../Views/ErrorView';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n    state = {\n        searchString: null,\n        productData: [],\n        filters: [],\n        cartElements: [],\n        cartCount: 0,\n        totalItemCount: [],\n        individualPrices: [],\n        brandFilterValue: '',\n        colorFilterValue: '',\n        minPriceFilterValue: '',\n        maxPriceFilterValue: '',\n        error: false\n    }\n    componentDidMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                this.setState({ productData: response.data })\n                // this.state.productData.map(product => console.log(product.discount))\n                this.state.productData.forEach((product) => {\n                    return (\n                        this.setState({ totalItemCount: [...this.state.totalItemCount, { id: product.id, quantity: 0 }] })\n                    )\n                })\n\n\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/filters\")\n            .then((response) => {\n                this.setState({ filters: response.data })\n                console.log(response)\n            })\n            .catch(error => {\n                this.setState({ error: error.response })\n\n            })\n    }\n\n    //Button Diable\n\n    isButtonDisabled = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.indexOf(item => item.id === id);\n\n        if (totalItemCount[index].quantity === 0) return true\n        else return false\n    }\n\n    // Filter Methods\n\n    searchOnchangeHandler = (searchString) => {\n        this.setState({ searchString: searchString });\n\n    }\n\n    selectOnChangeHandler = (selectValue) => {\n        this.setState(selectValue)\n    }\n\n    colorAndBrandFilter = (productData) => {\n        productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true)\n            .filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true)\n        return productData\n    }\n\n\n    filterSubmitHandler = () => {\n        if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        }\n        else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(\n                        product =>\n                            product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', ''))\n                            &&\n                            product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', ''))\n                    )\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n        } else {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        }\n\n    }\n\n    removeFilter = () => {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                console.log(\"hello from remove\")\n                this.setState({ productData: response.data })\n            })\n            .catch(error => {\n                this.setState({ error: error.response })\n\n            })\n    }\n    removeFromCart = (id) => {\n        const cartElements = [...this.state.cartElements];\n        const index = cartElements.findIndex(item => item === id)\n        // cartElements = cartElements.filter(product => product !== id)\n        cartElements.splice(index, 1);\n        this.setState({ cartElements: cartElements, cartCount: this.state.cartCount - 1 })\n    }\n\n    totalItemCountFinder = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n\n        return (totalItemCount[index].quantity)\n    }\n    individualItemPriceCalculator = (id) => {\n        const productData = [...this.state.productData];\n        const productDataIndex = productData.findIndex(item => item.id === id);\n        const price = productData[productDataIndex].price.final_price;\n\n        const totalItemCount = [...this.state.totalItemCount];\n        const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n        const count = totalItemCount[totalItemCountIndex].quantity;\n\n        const final_price = price * count;\n        // this.setState({ hello: \"hello\" })\n\n        // this.updateIndividualPrices(final_price)\n\n        return final_price;\n    }\n\n    updateIndividualPrices = (price) => {\n        this.setState({ individualPrices: [...this.state.individualPrices, price] })\n    }\n\n    totalItemCountIncrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n        })\n\n    }\n    totalItemCountDecrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n\n        })\n\n    }\n    handleDetails = () => {\n        console.log(\"hello from detail\")\n    }\n\n    handleAddtoCard = (id) => {\n        let allAddedElements = [...this.state.cartElements];\n\n        if (allAddedElements.indexOf(id) === -1) {\n            const array = [...this.state.cartElements, id];\n            this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n            this.totalItemCountIncrementHandler(id)\n        } else {\n            alert(\"Item already added to cart! Please navigate to cart to update the quantity\")\n        }\n\n        // this.setState({ cartElements: allAddedElements })\n        // const array = [...this.state.cartElements, id];\n        // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n\n\n\n    }\n\n    render() {\n        return (\n            this.state.error === false ?\n                <ProductContext.Provider value={{\n                    ...this.state,\n                    searchOnchangeHandler: this.searchOnchangeHandler,\n                    selectOnChangeHandler: this.selectOnChangeHandler,\n                    filterSubmitHandler: this.filterSubmitHandler,\n                    handleDetails: this.handleDetails,\n                    handleAddtoCard: this.handleAddtoCard,\n                    totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n                    totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n                    totalItemCountFinder: this.totalItemCountFinder,\n                    individualItemPriceCalculator: this.individualItemPriceCalculator,\n                    removeFilter: this.removeFilter,\n                    removeFromCart: this.removeFromCart\n                }}>\n                    {this.props.children}\n                </ProductContext.Provider> :\n                <ErrorView error={this.state.error} />\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}