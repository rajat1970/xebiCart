{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchString: null,\n      productData: [],\n      filters: [],\n      cartElements: [],\n      cartCount: 0,\n      totalItemCount: [],\n      individualPrices: []\n    };\n\n    this.searchOnchangeHandler = searchString => {\n      this.setState({\n        searchString: searchString\n      });\n    };\n\n    this.brandSelectOnChangeHandler = selectValue => {\n      this.setState({\n        brandFilterValue: selectValue\n      });\n    };\n\n    this.filterSubmitHandler = () => {\n      axios.get(\"https://xebiascart.herokuapp.com/products?title=\" + this.state.brandFilterValue).then(response => {\n        this.setState({\n          productData: response.data\n        });\n      });\n    };\n\n    this.totalItemCountFinder = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.findIndex(item => item.id === id);\n      return totalItemCount[index].quantity;\n    };\n\n    this.individualItemPriceCalculator = id => {\n      const productData = [...this.state.productData];\n      const productDataIndex = productData.findIndex(item => item.id === id);\n      const price = productData[productDataIndex].price.final_price;\n      const totalItemCount = [...this.state.totalItemCount];\n      const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n      const count = totalItemCount[totalItemCountIndex].quantity;\n      const final_price = price * count; // this.setState({ hello: \"hello\" })\n      // this.updateIndividualPrices(final_price)\n\n      return final_price;\n    };\n\n    this.updateIndividualPrices = price => {\n      this.setState({\n        individualPrices: [...this.state.individualPrices, price]\n      });\n    };\n\n    this.totalItemCountIncrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.totalItemCountDecrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.handleDetails = () => {\n      console.log(\"hello from detail\");\n    };\n\n    this.handleAddtoCard = id => {\n      let allAddedElements = [...this.state.cartElements];\n\n      if (allAddedElements.indexOf(id) === -1) {\n        const array = [...this.state.cartElements, id];\n        this.setState({\n          cartElements: array,\n          cartCount: this.state.cartCount + 1\n        });\n      } else {\n        alert(\"Item already added to cart! Please navigate to cart to update the quantity\");\n      }\n\n      this.totalItemCountIncrementHandler(id); // this.setState({ cartElements: allAddedElements })\n      // const array = [...this.state.cartElements, id];\n      // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n      this.setState({\n        productData: response.data\n      });\n      this.state.productData.forEach(product => {\n        return this.setState({\n          totalItemCount: [...this.state.totalItemCount, {\n            id: product.id,\n            quantity: 0\n          }]\n        });\n      });\n      console.log(this.state.totalItemCount);\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/filters\").then(response => {\n      this.setState({\n        filters: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        searchOnchangeHandler: this.searchOnchangeHandler,\n        brandSelectOnChangeHandler: this.brandSelectOnChangeHandler,\n        filterSubmitHandler: this.filterSubmitHandler,\n        handleDetails: this.handleDetails,\n        handleAddtoCard: this.handleAddtoCard,\n        totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n        totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n        totalItemCountFinder: this.totalItemCountFinder,\n        individualItemPriceCalculator: this.individualItemPriceCalculator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js"],"names":["React","Component","axios","ProductContext","createContext","ProductProvider","state","searchString","productData","filters","cartElements","cartCount","totalItemCount","individualPrices","searchOnchangeHandler","setState","brandSelectOnChangeHandler","selectValue","brandFilterValue","filterSubmitHandler","get","then","response","data","totalItemCountFinder","id","index","findIndex","item","quantity","individualItemPriceCalculator","productDataIndex","price","final_price","totalItemCountIndex","count","updateIndividualPrices","totalItemCountIncrementHandler","prevState","totalItemCountDecrementHandler","handleDetails","console","log","handleAddtoCard","allAddedElements","indexOf","array","alert","componentDidMount","forEach","product","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n    state = {\n        searchString: null,\n        productData: [],\n        filters: [],\n        cartElements: [],\n        cartCount: 0,\n        totalItemCount: [],\n        individualPrices: []\n\n    }\n\n    componentDidMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                this.setState({ productData: response.data })\n\n                this.state.productData.forEach((product) => {\n                    return (\n                        this.setState({ totalItemCount: [...this.state.totalItemCount, { id: product.id, quantity: 0 }] })\n                    )\n                })\n                console.log(this.state.totalItemCount)\n\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/filters\")\n            .then((response) => {\n\n                this.setState({ filters: response.data })\n            })\n    }\n\n    searchOnchangeHandler = (searchString) => {\n        this.setState({ searchString: searchString });\n\n    }\n\n    brandSelectOnChangeHandler = (selectValue) => {\n        this.setState({ brandFilterValue: selectValue })\n    }\n    filterSubmitHandler = () => {\n        axios.get(\"https://xebiascart.herokuapp.com/products?title=\" + this.state.brandFilterValue)\n            .then(response => {\n                this.setState({ productData: response.data })\n            })\n    }\n\n    totalItemCountFinder = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n\n        return (totalItemCount[index].quantity)\n    }\n    individualItemPriceCalculator = (id) => {\n        const productData = [...this.state.productData];\n        const productDataIndex = productData.findIndex(item => item.id === id);\n        const price = productData[productDataIndex].price.final_price;\n\n        const totalItemCount = [...this.state.totalItemCount];\n        const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n        const count = totalItemCount[totalItemCountIndex].quantity;\n\n        const final_price = price * count;\n        // this.setState({ hello: \"hello\" })\n\n        // this.updateIndividualPrices(final_price)\n\n        return final_price;\n    }\n\n    updateIndividualPrices = (price) => {\n        this.setState({ individualPrices: [...this.state.individualPrices, price] })\n    }\n\n    totalItemCountIncrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n        })\n\n    }\n    totalItemCountDecrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n\n        })\n\n    }\n    handleDetails = () => {\n        console.log(\"hello from detail\")\n    }\n\n    handleAddtoCard = (id) => {\n        let allAddedElements = [...this.state.cartElements];\n\n        if (allAddedElements.indexOf(id) === -1) {\n            const array = [...this.state.cartElements, id];\n            this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n        } else {\n            alert(\"Item already added to cart! Please navigate to cart to update the quantity\")\n        }\n        this.totalItemCountIncrementHandler(id)\n        // this.setState({ cartElements: allAddedElements })\n        // const array = [...this.state.cartElements, id];\n        // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n\n\n\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                searchOnchangeHandler: this.searchOnchangeHandler,\n                brandSelectOnChangeHandler: this.brandSelectOnChangeHandler,\n                filterSubmitHandler: this.filterSubmitHandler,\n                handleDetails: this.handleDetails,\n                handleAddtoCard: this.handleAddtoCard,\n                totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n                totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n                totalItemCountFinder: this.totalItemCountFinder,\n                individualItemPriceCalculator: this.individualItemPriceCalculator\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}