{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ErrorView from '../Views/ErrorView';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchString: null,\n      productData: [],\n      filters: [],\n      cartElements: [],\n      cartCount: 0,\n      totalItemCount: [],\n      individualPrices: [],\n      brandFilterValue: '',\n      colorFilterValue: '',\n      minPriceFilterValue: '',\n      maxPriceFilterValue: '',\n      error: false,\n      isButtonDisabled: false,\n      username: null,\n      password: null,\n      users: null\n    };\n\n    this.onInputChange = payload => {\n      this.setState({ ...this.state,\n        ...payload\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      this.state.users.forEach(user => console.log(user));\n    };\n\n    this.isButtonDisabled = id => {\n      if (this.state.cartElements.includes(id)) {\n        return true;\n      }\n    };\n\n    this.searchOnchangeHandler = searchString => {\n      this.setState({\n        searchString: searchString\n      });\n    };\n\n    this.selectOnChangeHandler = selectValue => {\n      this.setState(selectValue);\n    };\n\n    this.colorAndBrandFilter = productData => {\n      productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true).filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true);\n      return productData;\n    };\n\n    this.filterSubmitHandler = () => {\n      if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')) && product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      }\n    };\n\n    this.removeFilter = () => {\n      axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n        console.log(\"hello from remove\");\n        this.setState({\n          productData: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          error: error.response\n        });\n      });\n    };\n\n    this.removeFromCart = id => {\n      const cartElements = [...this.state.cartElements];\n      const index = cartElements.findIndex(item => item === id); // cartElements = cartElements.filter(product => product !== id)\n\n      cartElements.splice(index, 1);\n      this.setState({\n        cartElements: cartElements,\n        cartCount: this.state.cartCount - 1\n      });\n    };\n\n    this.totalItemCountFinder = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.findIndex(item => item.id === id);\n      return totalItemCount[index].quantity;\n    };\n\n    this.individualItemPriceCalculator = id => {\n      const productData = [...this.state.productData];\n      const productDataIndex = productData.findIndex(item => item.id === id);\n      const price = productData[productDataIndex].price.final_price;\n      const totalItemCount = [...this.state.totalItemCount];\n      const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n      const count = totalItemCount[totalItemCountIndex].quantity;\n      const final_price = price * count; // this.setState({ hello: \"hello\" })\n      // this.updateIndividualPrices(final_price)\n\n      return final_price;\n    };\n\n    this.updateIndividualPrices = price => {\n      this.setState({\n        individualPrices: [...this.state.individualPrices, price]\n      });\n    };\n\n    this.totalItemCountIncrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.totalItemCountDecrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.handleDetails = () => {\n      console.log(\"hello from detail\");\n    };\n\n    this.handleAddtoCard = id => {\n      let allAddedElements = [...this.state.cartElements];\n\n      if (allAddedElements.indexOf(id) === -1) {\n        const array = [...this.state.cartElements, id];\n        this.setState({\n          cartElements: array,\n          cartCount: this.state.cartCount + 1,\n          isButtonDisabled: true\n        });\n        this.totalItemCountIncrementHandler(id);\n      } else {\n        alert(\"Item already added to cart! Please navigate to cart to update the quantity\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n      this.setState({\n        productData: response.data\n      }); // this.state.productData.map(product => console.log(product.discount))\n\n      this.state.productData.forEach(product => {\n        return this.setState({\n          totalItemCount: [...this.state.totalItemCount, {\n            id: product.id,\n            quantity: 0\n          }]\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        error: error.response\n      });\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/filters\").then(response => {\n      this.setState({\n        filters: response.data\n      });\n    }).catch(error => {\n      error === undefined ? this.setState({\n        error: true\n      }) : this.setState({\n        error: error.response\n      });\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/users\").then(response => {\n      this.setState({\n        users: response.data\n      });\n    });\n  } //Login Functions \n\n\n  render() {\n    return this.state.error === false ? /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        searchOnchangeHandler: this.searchOnchangeHandler,\n        selectOnChangeHandler: this.selectOnChangeHandler,\n        filterSubmitHandler: this.filterSubmitHandler,\n        handleDetails: this.handleDetails,\n        handleAddtoCard: this.handleAddtoCard,\n        totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n        totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n        totalItemCountFinder: this.totalItemCountFinder,\n        individualItemPriceCalculator: this.individualItemPriceCalculator,\n        removeFilter: this.removeFilter,\n        removeFromCart: this.removeFromCart,\n        isButtonDisabled: this.isButtonDisabled,\n        onInputChange: this.onInputChange,\n        onSubmitHandler: this.onSubmitHandler\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, this.props.children) : /*#__PURE__*/React.createElement(ErrorView, {\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js"],"names":["React","Component","axios","ErrorView","ProductContext","createContext","ProductProvider","state","searchString","productData","filters","cartElements","cartCount","totalItemCount","individualPrices","brandFilterValue","colorFilterValue","minPriceFilterValue","maxPriceFilterValue","error","isButtonDisabled","username","password","users","onInputChange","payload","setState","onSubmitHandler","e","preventDefault","forEach","user","console","log","id","includes","searchOnchangeHandler","selectOnChangeHandler","selectValue","colorAndBrandFilter","filter","product","title","toLowerCase","colour","filterSubmitHandler","get","then","response","data","catch","price","final_price","parseInt","replace","removeFilter","removeFromCart","index","findIndex","item","splice","totalItemCountFinder","quantity","individualItemPriceCalculator","productDataIndex","totalItemCountIndex","count","updateIndividualPrices","totalItemCountIncrementHandler","prevState","totalItemCountDecrementHandler","handleDetails","handleAddtoCard","allAddedElements","indexOf","array","alert","componentDidMount","undefined","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport ErrorView from '../Views/ErrorView';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n    state = {\n        searchString: null,\n        productData: [],\n        filters: [],\n        cartElements: [],\n        cartCount: 0,\n        totalItemCount: [],\n        individualPrices: [],\n        brandFilterValue: '',\n        colorFilterValue: '',\n        minPriceFilterValue: '',\n        maxPriceFilterValue: '',\n        error: false,\n        isButtonDisabled: false,\n        username: null,\n        password: null,\n        users: null\n    }\n    componentDidMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                this.setState({ productData: response.data })\n                // this.state.productData.map(product => console.log(product.discount))\n                this.state.productData.forEach((product) => {\n                    return (\n                        this.setState({ totalItemCount: [...this.state.totalItemCount, { id: product.id, quantity: 0 }] })\n                    )\n                })\n\n            }).catch(error => {\n                this.setState({ error: error.response })\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/filters\")\n            .then((response) => {\n                this.setState({ filters: response.data })\n\n            })\n            .catch(error => {\n                error === undefined ?\n                    this.setState({ error: true }) :\n                    this.setState({ error: error.response })\n\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/users\")\n            .then((response) => {\n                this.setState({ users: response.data })\n            })\n    }\n    //Login Functions \n\n    onInputChange = (payload) => {\n        this.setState({ ...this.state, ...payload });\n    }\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        this.state.users.forEach((user) => console.log(user))\n    }\n    //Button Disable\n\n    isButtonDisabled = (id) => {\n        if (this.state.cartElements.includes(id)) {\n            return true\n        }\n    }\n\n    // Filter Methods\n\n    searchOnchangeHandler = (searchString) => {\n        this.setState({ searchString: searchString });\n\n    }\n\n    selectOnChangeHandler = (selectValue) => {\n        this.setState(selectValue)\n    }\n\n    colorAndBrandFilter = (productData) => {\n        productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true)\n            .filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true)\n        return productData\n    }\n\n\n    filterSubmitHandler = () => {\n        if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        }\n        else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(\n                        product =>\n                            product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', ''))\n                            &&\n                            product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', ''))\n                    )\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n        } else {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        }\n\n    }\n\n    removeFilter = () => {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                console.log(\"hello from remove\")\n                this.setState({ productData: response.data })\n            })\n            .catch(error => {\n                this.setState({ error: error.response })\n\n            })\n    }\n    removeFromCart = (id) => {\n        const cartElements = [...this.state.cartElements];\n        const index = cartElements.findIndex(item => item === id)\n        // cartElements = cartElements.filter(product => product !== id)\n        cartElements.splice(index, 1);\n        this.setState({ cartElements: cartElements, cartCount: this.state.cartCount - 1 })\n    }\n\n    totalItemCountFinder = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n\n        return (totalItemCount[index].quantity)\n    }\n    individualItemPriceCalculator = (id) => {\n        const productData = [...this.state.productData];\n        const productDataIndex = productData.findIndex(item => item.id === id);\n        const price = productData[productDataIndex].price.final_price;\n\n        const totalItemCount = [...this.state.totalItemCount];\n        const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n        const count = totalItemCount[totalItemCountIndex].quantity;\n\n        const final_price = price * count;\n        // this.setState({ hello: \"hello\" })\n\n        // this.updateIndividualPrices(final_price)\n\n        return final_price;\n    }\n\n    updateIndividualPrices = (price) => {\n        this.setState({ individualPrices: [...this.state.individualPrices, price] })\n    }\n\n    totalItemCountIncrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n        })\n\n    }\n    totalItemCountDecrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n\n        })\n\n    }\n    handleDetails = () => {\n        console.log(\"hello from detail\")\n    }\n\n    handleAddtoCard = (id) => {\n        let allAddedElements = [...this.state.cartElements];\n\n        if (allAddedElements.indexOf(id) === -1) {\n            const array = [...this.state.cartElements, id];\n            this.setState({ cartElements: array, cartCount: this.state.cartCount + 1, isButtonDisabled: true })\n            this.totalItemCountIncrementHandler(id)\n        } else {\n            alert(\"Item already added to cart! Please navigate to cart to update the quantity\")\n        }\n    }\n\n    render() {\n        return (\n            this.state.error === false ?\n                <ProductContext.Provider value={{\n                    ...this.state,\n                    searchOnchangeHandler: this.searchOnchangeHandler,\n                    selectOnChangeHandler: this.selectOnChangeHandler,\n                    filterSubmitHandler: this.filterSubmitHandler,\n                    handleDetails: this.handleDetails,\n                    handleAddtoCard: this.handleAddtoCard,\n                    totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n                    totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n                    totalItemCountFinder: this.totalItemCountFinder,\n                    individualItemPriceCalculator: this.individualItemPriceCalculator,\n                    removeFilter: this.removeFilter,\n                    removeFromCart: this.removeFromCart,\n                    isButtonDisabled: this.isButtonDisabled,\n                    onInputChange: this.onInputChange,\n                    onSubmitHandler: this.onSubmitHandler\n                }}>\n                    {this.props.children}\n                </ProductContext.Provider> :\n                <ErrorView error={this.state.error} />\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}