{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport ErrorView from '../Views/ErrorView';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchString: null,\n      productData: [],\n      filters: [],\n      cartElements: [],\n      cartCount: 0,\n      totalItemCount: [],\n      individualPrices: [],\n      brandFilterValue: '',\n      colorFilterValue: '',\n      minPriceFilterValue: '',\n      maxPriceFilterValue: '',\n      error: false,\n      isButtonDisabled: false,\n      users: null,\n      username: null,\n      password: null,\n      name: null\n    };\n\n    this.onInputChange = payload => {\n      this.setState({ ...this.state,\n        ...payload\n      });\n    };\n\n    this.onSubmitHandler = e => {\n      e.preventDefault();\n      this.state.users.forEach(user => user.username === this.state.username && user.password === this.state.password ? console.log(this.props) : alert(\"Enter the correct credentialss\"));\n    };\n\n    this.setfullName = name => {\n      console.log(hello);\n    };\n\n    this.isButtonDisabled = id => {\n      if (this.state.cartElements.includes(id)) {\n        return true;\n      }\n    };\n\n    this.searchOnchangeHandler = searchString => {\n      this.setState({\n        searchString: searchString\n      });\n    };\n\n    this.selectOnChangeHandler = selectValue => {\n      this.setState(selectValue);\n    };\n\n    this.colorAndBrandFilter = productData => {\n      productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true).filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true);\n      return productData;\n    };\n\n    this.filterSubmitHandler = () => {\n      if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')) && product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      } else {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        }).catch(error => {\n          this.setState({\n            error: error.response\n          });\n        });\n      }\n    };\n\n    this.removeFilter = () => {\n      axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n        console.log(\"hello from remove\");\n        this.setState({\n          productData: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          error: error.response\n        });\n      });\n    };\n\n    this.removeFromCart = id => {\n      const cartElements = [...this.state.cartElements];\n      const index = cartElements.findIndex(item => item === id); // cartElements = cartElements.filter(product => product !== id)\n\n      cartElements.splice(index, 1);\n      this.setState({\n        cartElements: cartElements,\n        cartCount: this.state.cartCount - 1\n      });\n    };\n\n    this.totalItemCountFinder = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.findIndex(item => item.id === id);\n      return totalItemCount[index].quantity;\n    };\n\n    this.individualItemPriceCalculator = id => {\n      const productData = [...this.state.productData];\n      const productDataIndex = productData.findIndex(item => item.id === id);\n      const price = productData[productDataIndex].price.final_price;\n      const totalItemCount = [...this.state.totalItemCount];\n      const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n      const count = totalItemCount[totalItemCountIndex].quantity;\n      const final_price = price * count; // this.setState({ hello: \"hello\" })\n      // this.updateIndividualPrices(final_price)\n\n      return final_price;\n    };\n\n    this.updateIndividualPrices = price => {\n      this.setState({\n        individualPrices: [...this.state.individualPrices, price]\n      });\n    };\n\n    this.totalItemCountIncrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.totalItemCountDecrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.handleDetails = () => {\n      console.log(\"hello from detail\");\n    };\n\n    this.handleAddtoCard = id => {\n      let allAddedElements = [...this.state.cartElements];\n\n      if (allAddedElements.indexOf(id) === -1) {\n        const array = [...this.state.cartElements, id];\n        this.setState({\n          cartElements: array,\n          cartCount: this.state.cartCount + 1,\n          isButtonDisabled: true\n        });\n        this.totalItemCountIncrementHandler(id);\n      } else {\n        alert(\"Item already added to cart! Please navigate to cart to update the quantity\");\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n      this.setState({\n        productData: response.data\n      }); // this.state.productData.map(product => console.log(product.discount))\n\n      this.state.productData.forEach(product => {\n        return this.setState({\n          totalItemCount: [...this.state.totalItemCount, {\n            id: product.id,\n            quantity: 0\n          }]\n        });\n      });\n    }).catch(error => {\n      this.setState({\n        error: error.response\n      });\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/filters\").then(response => {\n      this.setState({\n        filters: response.data\n      });\n    }).catch(error => {\n      error === undefined ? this.setState({\n        error: true\n      }) : this.setState({\n        error: error.response\n      });\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/users\").then(response => {\n      this.setState({\n        users: response.data\n      });\n    });\n  } //Login Functions \n\n\n  render() {\n    return this.state.error === false ? /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        searchOnchangeHandler: this.searchOnchangeHandler,\n        selectOnChangeHandler: this.selectOnChangeHandler,\n        filterSubmitHandler: this.filterSubmitHandler,\n        handleDetails: this.handleDetails,\n        handleAddtoCard: this.handleAddtoCard,\n        totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n        totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n        totalItemCountFinder: this.totalItemCountFinder,\n        individualItemPriceCalculator: this.individualItemPriceCalculator,\n        removeFilter: this.removeFilter,\n        removeFromCart: this.removeFromCart,\n        isButtonDisabled: this.isButtonDisabled,\n        onInputChange: this.onInputChange,\n        onSubmitHandler: this.onSubmitHandler,\n        setfullName: this.setfullName\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    }, this.props.children) : /*#__PURE__*/React.createElement(ErrorView, {\n      error: this.state.error,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 17\n      }\n    });\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js"],"names":["React","Component","axios","ErrorView","ProductContext","createContext","ProductProvider","state","searchString","productData","filters","cartElements","cartCount","totalItemCount","individualPrices","brandFilterValue","colorFilterValue","minPriceFilterValue","maxPriceFilterValue","error","isButtonDisabled","users","username","password","name","onInputChange","payload","setState","onSubmitHandler","e","preventDefault","forEach","user","console","log","props","alert","setfullName","hello","id","includes","searchOnchangeHandler","selectOnChangeHandler","selectValue","colorAndBrandFilter","filter","product","title","toLowerCase","colour","filterSubmitHandler","get","then","response","data","catch","price","final_price","parseInt","replace","removeFilter","removeFromCart","index","findIndex","item","splice","totalItemCountFinder","quantity","individualItemPriceCalculator","productDataIndex","totalItemCountIndex","count","updateIndividualPrices","totalItemCountIncrementHandler","prevState","totalItemCountDecrementHandler","handleDetails","handleAddtoCard","allAddedElements","indexOf","array","componentDidMount","undefined","render","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport ErrorView from '../Views/ErrorView';\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n\n    state = {\n        searchString: null,\n        productData: [],\n        filters: [],\n        cartElements: [],\n        cartCount: 0,\n        totalItemCount: [],\n        individualPrices: [],\n        brandFilterValue: '',\n        colorFilterValue: '',\n        minPriceFilterValue: '',\n        maxPriceFilterValue: '',\n        error: false,\n        isButtonDisabled: false,\n        users: null,\n        username: null,\n        password: null,\n        name: null\n    }\n    componentDidMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                this.setState({ productData: response.data })\n                // this.state.productData.map(product => console.log(product.discount))\n                this.state.productData.forEach((product) => {\n                    return (\n                        this.setState({ totalItemCount: [...this.state.totalItemCount, { id: product.id, quantity: 0 }] })\n                    )\n                })\n\n            }).catch(error => {\n                this.setState({ error: error.response })\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/filters\")\n            .then((response) => {\n                this.setState({ filters: response.data })\n\n            })\n            .catch(error => {\n                error === undefined ?\n                    this.setState({ error: true }) :\n                    this.setState({ error: error.response })\n\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/users\")\n            .then((response) => {\n                this.setState({ users: response.data })\n            })\n    }\n    //Login Functions \n\n    onInputChange = (payload) => {\n        this.setState({ ...this.state, ...payload });\n    }\n    onSubmitHandler = (e) => {\n        e.preventDefault();\n        this.state.users.forEach((user) =>\n            user.username === this.state.username && user.password === this.state.password ?\n                console.log(this.props) :\n                alert(\"Enter the correct credentialss\")\n        )\n    }\n\n    setfullName = (name) => {\n        console.log(hello)\n    }\n    //Button Disable\n\n    isButtonDisabled = (id) => {\n        if (this.state.cartElements.includes(id)) {\n            return true\n        }\n    }\n\n    // Filter Methods\n\n    searchOnchangeHandler = (searchString) => {\n        this.setState({ searchString: searchString });\n\n    }\n\n    selectOnChangeHandler = (selectValue) => {\n        this.setState(selectValue)\n    }\n\n    colorAndBrandFilter = (productData) => {\n        productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true)\n            .filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true)\n        return productData\n    }\n\n\n    filterSubmitHandler = () => {\n        if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        }\n        else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(\n                        product =>\n                            product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', ''))\n                            &&\n                            product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', ''))\n                    )\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n        } else {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n                })\n                .catch(error => {\n                    this.setState({ error: error.response })\n\n                })\n\n        }\n\n    }\n\n    removeFilter = () => {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                console.log(\"hello from remove\")\n                this.setState({ productData: response.data })\n            })\n            .catch(error => {\n                this.setState({ error: error.response })\n\n            })\n    }\n    removeFromCart = (id) => {\n        const cartElements = [...this.state.cartElements];\n        const index = cartElements.findIndex(item => item === id)\n        // cartElements = cartElements.filter(product => product !== id)\n        cartElements.splice(index, 1);\n        this.setState({ cartElements: cartElements, cartCount: this.state.cartCount - 1 })\n    }\n\n    totalItemCountFinder = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n\n        return (totalItemCount[index].quantity)\n    }\n    individualItemPriceCalculator = (id) => {\n        const productData = [...this.state.productData];\n        const productDataIndex = productData.findIndex(item => item.id === id);\n        const price = productData[productDataIndex].price.final_price;\n\n        const totalItemCount = [...this.state.totalItemCount];\n        const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n        const count = totalItemCount[totalItemCountIndex].quantity;\n\n        const final_price = price * count;\n        // this.setState({ hello: \"hello\" })\n\n        // this.updateIndividualPrices(final_price)\n\n        return final_price;\n    }\n\n    updateIndividualPrices = (price) => {\n        this.setState({ individualPrices: [...this.state.individualPrices, price] })\n    }\n\n    totalItemCountIncrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n        })\n\n    }\n    totalItemCountDecrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n\n        })\n\n    }\n    handleDetails = () => {\n        console.log(\"hello from detail\")\n    }\n\n    handleAddtoCard = (id) => {\n        let allAddedElements = [...this.state.cartElements];\n\n        if (allAddedElements.indexOf(id) === -1) {\n            const array = [...this.state.cartElements, id];\n            this.setState({ cartElements: array, cartCount: this.state.cartCount + 1, isButtonDisabled: true })\n            this.totalItemCountIncrementHandler(id)\n        } else {\n            alert(\"Item already added to cart! Please navigate to cart to update the quantity\")\n        }\n    }\n\n    render() {\n        return (\n            this.state.error === false ?\n                <ProductContext.Provider value={{\n                    ...this.state,\n                    searchOnchangeHandler: this.searchOnchangeHandler,\n                    selectOnChangeHandler: this.selectOnChangeHandler,\n                    filterSubmitHandler: this.filterSubmitHandler,\n                    handleDetails: this.handleDetails,\n                    handleAddtoCard: this.handleAddtoCard,\n                    totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n                    totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n                    totalItemCountFinder: this.totalItemCountFinder,\n                    individualItemPriceCalculator: this.individualItemPriceCalculator,\n                    removeFilter: this.removeFilter,\n                    removeFromCart: this.removeFromCart,\n                    isButtonDisabled: this.isButtonDisabled,\n                    onInputChange: this.onInputChange,\n                    onSubmitHandler: this.onSubmitHandler,\n                    setfullName: this.setfullName\n                }}>\n                    {this.props.children}\n                </ProductContext.Provider> :\n                <ErrorView error={this.state.error} />\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}