{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      searchString: null,\n      productData: [],\n      filters: [],\n      cartElements: [],\n      cartCount: 0,\n      totalItemCount: [],\n      individualPrices: [],\n      brandFilterValue: '',\n      colorFilterValue: '',\n      minPriceFilterValue: '',\n      maxPriceFilterValue: '',\n      error: false\n    };\n\n    this.searchOnchangeHandler = searchString => {\n      this.setState({\n        searchString: searchString\n      });\n    };\n\n    this.selectOnChangeHandler = selectValue => {\n      this.setState(selectValue);\n    };\n\n    this.colorAndBrandFilter = productData => {\n      productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true).filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true);\n      return productData;\n    };\n\n    this.filterSubmitHandler = () => {\n      if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        });\n      } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        });\n      } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')) && product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')));\n          this.setState({\n            productData: productData\n          });\n        });\n      } else {\n        axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n          this.setState({\n            productData: response.data\n          });\n          let productData = [...this.state.productData];\n          productData = this.colorAndBrandFilter(productData);\n          this.setState({\n            productData: productData\n          });\n        });\n      }\n    };\n\n    this.removeFilter = () => {\n      axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n        console.log(\"hello from remove\");\n        this.setState({\n          productData: response.data\n        });\n      });\n    };\n\n    this.removeFromCart = id => {\n      let cartElements = [...this.state.cartElements]; // const index = cartElements.findIndex(item => item === id)\n\n      cartElements = cartElements.filter(product => product !== id); // cartElements.splice(index, 1);\n\n      this.setState({\n        cartElements: cartElements,\n        cartCount: this.state.cartCount - 1\n      });\n    };\n\n    this.totalItemCountFinder = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.findIndex(item => item.id === id);\n      return totalItemCount[index].quantity;\n    };\n\n    this.individualItemPriceCalculator = id => {\n      const productData = [...this.state.productData];\n      const productDataIndex = productData.findIndex(item => item.id === id);\n      const price = productData[productDataIndex].price.final_price;\n      const totalItemCount = [...this.state.totalItemCount];\n      const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n      const count = totalItemCount[totalItemCountIndex].quantity;\n      const final_price = price * count; // this.setState({ hello: \"hello\" })\n      // this.updateIndividualPrices(final_price)\n\n      return final_price;\n    };\n\n    this.updateIndividualPrices = price => {\n      this.setState({\n        individualPrices: [...this.state.individualPrices, price]\n      });\n    };\n\n    this.totalItemCountIncrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.totalItemCountDecrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.handleDetails = () => {\n      console.log(\"hello from detail\");\n    };\n\n    this.handleAddtoCard = id => {\n      let allAddedElements = [...this.state.cartElements];\n\n      if (allAddedElements.indexOf(id) === -1) {\n        const array = [...this.state.cartElements, id];\n        this.setState({\n          cartElements: array,\n          cartCount: this.state.cartCount + 1\n        });\n      } else {\n        alert(\"Item already added to cart! Please navigate to cart to update the quantity\");\n      }\n\n      this.totalItemCountIncrementHandler(id); // this.setState({ cartElements: allAddedElements })\n      // const array = [...this.state.cartElements, id];\n      // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n      this.setState({\n        productData: response.data\n      }); // this.state.productData.map(product => console.log(product.discount))\n\n      this.state.productData.forEach(product => {\n        return this.setState({\n          totalItemCount: [...this.state.totalItemCount, {\n            id: product.id,\n            quantity: 0\n          }]\n        });\n      });\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/filtes\").then(response => {\n      this.setState({\n        filters: response.data\n      });\n      console.log(response);\n    }).catch(error => {\n      this.setState({\n        error: error\n      });\n      console.log(error);\n    });\n  } // Filter Methods\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        searchOnchangeHandler: this.searchOnchangeHandler,\n        selectOnChangeHandler: this.selectOnChangeHandler,\n        filterSubmitHandler: this.filterSubmitHandler,\n        handleDetails: this.handleDetails,\n        handleAddtoCard: this.handleAddtoCard,\n        totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n        totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n        totalItemCountFinder: this.totalItemCountFinder,\n        individualItemPriceCalculator: this.individualItemPriceCalculator,\n        removeFilter: this.removeFilter,\n        removeFromCart: this.removeFromCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js"],"names":["React","Component","axios","ProductContext","createContext","ProductProvider","state","searchString","productData","filters","cartElements","cartCount","totalItemCount","individualPrices","brandFilterValue","colorFilterValue","minPriceFilterValue","maxPriceFilterValue","error","searchOnchangeHandler","setState","selectOnChangeHandler","selectValue","colorAndBrandFilter","filter","product","title","toLowerCase","includes","colour","filterSubmitHandler","get","then","response","data","price","final_price","parseInt","replace","removeFilter","console","log","removeFromCart","id","totalItemCountFinder","index","findIndex","item","quantity","individualItemPriceCalculator","productDataIndex","totalItemCountIndex","count","updateIndividualPrices","totalItemCountIncrementHandler","prevState","totalItemCountDecrementHandler","handleDetails","handleAddtoCard","allAddedElements","indexOf","array","alert","componentDidMount","forEach","catch","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n    state = {\n        searchString: null,\n        productData: [],\n        filters: [],\n        cartElements: [],\n        cartCount: 0,\n        totalItemCount: [],\n        individualPrices: [],\n        brandFilterValue: '',\n        colorFilterValue: '',\n        minPriceFilterValue: '',\n        maxPriceFilterValue: '',\n        error: false\n    }\n    componentDidMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                this.setState({ productData: response.data })\n                // this.state.productData.map(product => console.log(product.discount))\n                this.state.productData.forEach((product) => {\n                    return (\n                        this.setState({ totalItemCount: [...this.state.totalItemCount, { id: product.id, quantity: 0 }] })\n                    )\n                })\n\n\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/filtes\")\n            .then((response) => {\n                this.setState({ filters: response.data })\n                console.log(response)\n            })\n            .catch(error => {\n                this.setState({ error: error })\n                console.log(error)\n            })\n    }\n\n    // Filter Methods\n\n    searchOnchangeHandler = (searchString) => {\n        this.setState({ searchString: searchString });\n\n    }\n\n    selectOnChangeHandler = (selectValue) => {\n        this.setState(selectValue)\n    }\n\n    colorAndBrandFilter = (productData) => {\n        productData = productData.filter(product => this.state.brandFilterValue !== '' ? product.title.toLowerCase().includes(this.state.brandFilterValue.toLowerCase()) : true)\n            .filter(product => this.state.colorFilterValue !== '' ? product.colour.title.includes(this.state.colorFilterValue) : true)\n        return productData\n    }\n\n\n    filterSubmitHandler = () => {\n        if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n\n                })\n\n        } else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue === '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n\n        } else if (this.state.minPriceFilterValue === '' && this.state.maxPriceFilterValue !== '') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(product => product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', '')))\n                    this.setState({ productData: productData })\n                })\n\n        }\n        else if (this.state.minPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '' && this.state.maxPriceFilterValue !== '₹4000+') {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData).filter(\n                        product =>\n                            product.price.final_price <= parseInt(this.state.maxPriceFilterValue.replace('₹', ''))\n                            &&\n                            product.price.final_price >= parseInt(this.state.minPriceFilterValue.replace('₹', ''))\n                    )\n                    this.setState({ productData: productData })\n                })\n        } else {\n            axios.get(\"https://xebiascart.herokuapp.com/products\")\n                .then((response) => {\n                    this.setState({ productData: response.data })\n                    let productData = [...this.state.productData];\n                    productData = this.colorAndBrandFilter(productData)\n                    this.setState({ productData: productData })\n                })\n\n        }\n\n    }\n\n    removeFilter = () => {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                console.log(\"hello from remove\")\n                this.setState({ productData: response.data })\n            })\n\n    }\n    removeFromCart = (id) => {\n        let cartElements = [...this.state.cartElements];\n        // const index = cartElements.findIndex(item => item === id)\n        cartElements = cartElements.filter(product => product !== id)\n        // cartElements.splice(index, 1);\n        this.setState({ cartElements: cartElements, cartCount: this.state.cartCount - 1 })\n    }\n\n    totalItemCountFinder = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n\n        return (totalItemCount[index].quantity)\n    }\n    individualItemPriceCalculator = (id) => {\n        const productData = [...this.state.productData];\n        const productDataIndex = productData.findIndex(item => item.id === id);\n        const price = productData[productDataIndex].price.final_price;\n\n        const totalItemCount = [...this.state.totalItemCount];\n        const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n        const count = totalItemCount[totalItemCountIndex].quantity;\n\n        const final_price = price * count;\n        // this.setState({ hello: \"hello\" })\n\n        // this.updateIndividualPrices(final_price)\n\n        return final_price;\n    }\n\n    updateIndividualPrices = (price) => {\n        this.setState({ individualPrices: [...this.state.individualPrices, price] })\n    }\n\n    totalItemCountIncrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n        })\n\n    }\n    totalItemCountDecrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n\n        })\n\n    }\n    handleDetails = () => {\n        console.log(\"hello from detail\")\n    }\n\n    handleAddtoCard = (id) => {\n        let allAddedElements = [...this.state.cartElements];\n\n        if (allAddedElements.indexOf(id) === -1) {\n            const array = [...this.state.cartElements, id];\n            this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n        } else {\n            alert(\"Item already added to cart! Please navigate to cart to update the quantity\")\n        }\n        this.totalItemCountIncrementHandler(id)\n        // this.setState({ cartElements: allAddedElements })\n        // const array = [...this.state.cartElements, id];\n        // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n\n\n\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                searchOnchangeHandler: this.searchOnchangeHandler,\n                selectOnChangeHandler: this.selectOnChangeHandler,\n                filterSubmitHandler: this.filterSubmitHandler,\n                handleDetails: this.handleDetails,\n                handleAddtoCard: this.handleAddtoCard,\n                totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n                totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n                totalItemCountFinder: this.totalItemCountFinder,\n                individualItemPriceCalculator: this.individualItemPriceCalculator,\n                removeFilter: this.removeFilter,\n                removeFromCart: this.removeFromCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}