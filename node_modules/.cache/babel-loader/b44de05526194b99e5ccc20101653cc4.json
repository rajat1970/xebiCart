{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Views/ShoppingView.jsx\";\nimport React, { Component } from 'react';\nimport NavBarView from './NavBarView';\nimport { ProductConsumer } from '../Data/Context';\nimport Product from '../Components/Product';\nexport default class ShoppingView extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.selectMapper = filters => {\n      return filters.map(filter => {\n        return filter.type === 'BRAND' ? filter.values.map(value => /*#__PURE__*/React.createElement(\"option\", {\n          key: value.value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 54\n          }\n        }, value.value)) : null;\n      });\n    };\n\n    this.ColorSelectMapper = filters => {\n      return filters.map(filter => {\n        return filter.type === 'COLOUR' ? filter.values.map(value => /*#__PURE__*/React.createElement(\"option\", {\n          key: value.color,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 54\n          }\n        }, value.title)) : null;\n      });\n    };\n\n    this.maxPriceSelectMapper = filters => {\n      return filters.map(filter => {\n        return filter.type === 'PRICE' ? filter.values.map(value => {\n          return value.key > 2000 || value.key === \"Max\" ? /*#__PURE__*/React.createElement(\"option\", {\n            key: value.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 37\n            }\n          }, value.displayValue) : null;\n        }) : null;\n      });\n    };\n\n    this.minpriceSelectMapper = filters => {\n      return filters.map(filter => {\n        return filter.type === 'PRICE' ? filter.values.map(value => {\n          return value.key < 2000 || value.key === \"Min\" ? /*#__PURE__*/React.createElement(\"option\", {\n            key: value.key,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 37\n            }\n          }, value.displayValue) : null;\n        }) : null;\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, value => {\n      return /*#__PURE__*/React.createElement(React.Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(NavBarView, {\n        searchOnchangeHandler: value.searchOnchangeHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 33\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bottom-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bottom-container-left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"price-filter-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"brand-select\",\n        onChange: e => value.brandSelectOnChangeHandler(e.target.value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 45\n        }\n      }, this.selectMapper(value.filters)), /*#__PURE__*/React.createElement(\"select\", {\n        className: \"color-select\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 45\n        }\n      }, this.ColorSelectMapper(value.filters)), /*#__PURE__*/React.createElement(\"select\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 45\n        }\n      }, this.minpriceSelectMapper(value.filters)), /*#__PURE__*/React.createElement(\"select\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 45\n        }\n      }, this.maxPriceSelectMapper(value.filters)), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filter-submit-button-wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"filter-submit-button\",\n        onClick: value.filterSubmitHandler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 49\n        }\n      }, \"Filter\")))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"bottom-container-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(ProductConsumer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }, value => {\n        return value.searchString ? value.productData.filter(product => product.brand.includes(value.searchString.toLowerCase())).map(product => {\n          return /*#__PURE__*/React.createElement(Product, {\n            key: product.id,\n            product: product,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 86\n            }\n          });\n        }) : value.productData.map(product => {\n          return /*#__PURE__*/React.createElement(Product, {\n            key: product.id,\n            product: product,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 99\n            }\n          });\n        });\n      }))));\n    });\n  }\n\n} // const ShoppingView = (payload) => {\n//     const { productData, searchOnchangeHandler, searchString, filters, brandSelectOnChangeHandler, filterSubmitHandler } = payload;\n//     const selectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'BRAND' ?\n//                         filter.values.map((value) => <option key={value.value}>{value.value}</option>) : null\n//                 )\n//             })\n//         )\n//         /*filter.type === 'BRAND' ?\n//                     filter.values.map((value) => <option>valeu</option>)\n//                     : null) */\n//     }\n//     const ColorSelectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'COLOUR' ?\n//                         filter.values.map((value) => <option key={value.color}>{value.title}</option>) : null\n//                 )\n//             })\n//         )\n//     }\n//     const maxPriceSelectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'PRICE' ?\n//                         filter.values.map((value) => {\n//                             return (\n//                                 value.key > 2000 || value.key === \"Max\" ?\n//                                     <option key={value.key}>{value.displayValue}</option> : null)\n//                         }) : null\n//                 )\n//             })\n//         )\n//     }\n//     const minpriceSelectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'PRICE' ?\n//                         filter.values.map((value) => {\n//                             return (\n//                                 value.key < 2000 || value.key === \"Min\" ?\n//                                     <option key={value.key}>{value.displayValue}</option> : null)\n//                         }) : null\n//                 )\n//             })\n//         )\n//     }\n//     return (\n//         <React.Fragment>\n//             <NavBarView searchOnchangeHandler={searchOnchangeHandler} />\n//             <div className=\"bottom-container\">\n//                 <div className=\"bottom-container-left\">\n//                     <div className=\"price-filter-wrapper\">\n//                         <select className=\"brand-select\" onChange={(e) => brandSelectOnChangeHandler(e.target.value)}>\n//                             {\n//                                 selectMapper(filters)\n//                             }\n//                         </select>\n//                         <select className=\"color-select\" >\n//                             {ColorSelectMapper(filters)}\n//                         </select>\n//                         <select>\n//                             {minpriceSelectMapper(filters)}\n//                         </select>\n//                         <select>\n//                             {maxPriceSelectMapper(filters)}\n//                         </select>\n//                         <div className=\"filter-submit-button-wrapper\">\n//                             <button className=\"filter-submit-button\" onClick={filterSubmitHandler} >Filter</button>\n//                         </div>\n//                     </div>\n//                 </div>\n//                 <div className=\"bottom-container-right\">\n//                     <ProductConsumer>\n//                         {value => {\n//                             return (\n//                                 searchString ?\n//                                     value.productData.filter((product) => product.brand.includes(searchString.toLowerCase()))\n//                                         .map(product => { return <Product key={product.id} product={product} /> }) :\n//                                     value.productData.map(product => { return <Product key={product.id} product={product} /> })\n//                             )\n//                         }}\n//                     </ProductConsumer>\n//                 </div>\n//             </div>\n//         </React.Fragment>\n//     )\n// }\n// export default ShoppingView;","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Views/ShoppingView.jsx"],"names":["React","Component","NavBarView","ProductConsumer","Product","ShoppingView","selectMapper","filters","map","filter","type","values","value","ColorSelectMapper","color","title","maxPriceSelectMapper","key","displayValue","minpriceSelectMapper","render","searchOnchangeHandler","e","brandSelectOnChangeHandler","target","filterSubmitHandler","searchString","productData","product","brand","includes","toLowerCase","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,eAAT,QAAgC,iBAAhC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AAIA,eAAe,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAChDK,YADgD,GAChCC,OAAD,IAAa;AACxB,aACIA,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAY;AACpB,eACIA,MAAM,CAACC,IAAP,KAAgB,OAAhB,GAEID,MAAM,CAACE,MAAP,CAAcH,GAAd,CAAmBI,KAAD,iBAAW;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACA,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BA,KAAK,CAACA,KAAjC,CAA7B,CAFJ,GAEqF,IAHzF;AAMH,OAPD,CADJ;AAUH,KAZ+C;;AAAA,SAahDC,iBAbgD,GAa3BN,OAAD,IAAa;AAC7B,aACIA,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAY;AACpB,eACIA,MAAM,CAACC,IAAP,KAAgB,QAAhB,GAEID,MAAM,CAACE,MAAP,CAAcH,GAAd,CAAmBI,KAAD,iBAAW;AAAQ,UAAA,GAAG,EAAEA,KAAK,CAACE,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA2BF,KAAK,CAACG,KAAjC,CAA7B,CAFJ,GAEqF,IAHzF;AAMH,OAPD,CADJ;AAUH,KAxB+C;;AAAA,SAyBhDC,oBAzBgD,GAyBxBT,OAAD,IAAa;AAChC,aACIA,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAY;AACpB,eACIA,MAAM,CAACC,IAAP,KAAgB,OAAhB,GAEID,MAAM,CAACE,MAAP,CAAcH,GAAd,CAAmBI,KAAD,IAAW;AACzB,iBACIA,KAAK,CAACK,GAAN,GAAY,IAAZ,IAAoBL,KAAK,CAACK,GAAN,KAAc,KAAlC,gBACI;AAAQ,YAAA,GAAG,EAAEL,KAAK,CAACK,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBL,KAAK,CAACM,YAA/B,CADJ,GAC4D,IAFhE;AAGH,SAJD,CAFJ,GAMS,IAPb;AAUH,OAXD,CADJ;AAcH,KAxC+C;;AAAA,SAyChDC,oBAzCgD,GAyCxBZ,OAAD,IAAa;AAChC,aACIA,OAAO,CAACC,GAAR,CAAaC,MAAD,IAAY;AACpB,eACIA,MAAM,CAACC,IAAP,KAAgB,OAAhB,GAEID,MAAM,CAACE,MAAP,CAAcH,GAAd,CAAmBI,KAAD,IAAW;AACzB,iBACIA,KAAK,CAACK,GAAN,GAAY,IAAZ,IAAoBL,KAAK,CAACK,GAAN,KAAc,KAAlC,gBACI;AAAQ,YAAA,GAAG,EAAEL,KAAK,CAACK,GAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyBL,KAAK,CAACM,YAA/B,CADJ,GAC4D,IAFhE;AAGH,SAJD,CAFJ,GAMS,IAPb;AAUH,OAXD,CADJ;AAcH,KAxD+C;AAAA;;AA0DhDE,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEQR,KAAK,IAAI;AACL,0BACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,UAAD;AAAY,QAAA,qBAAqB,EAAEA,KAAK,CAACS,qBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAiC,QAAA,QAAQ,EAAGC,CAAD,IAAOV,KAAK,CAACW,0BAAN,CAAiCD,CAAC,CAACE,MAAF,CAASZ,KAA1C,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKN,YAAL,CAAkBM,KAAK,CAACL,OAAxB,CADL,CADJ,eAII;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKM,iBAAL,CAAuBD,KAAK,CAACL,OAA7B,CADL,CAJJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKY,oBAAL,CAA0BP,KAAK,CAACL,OAAhC,CADL,CAPJ,eAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKS,oBAAL,CAA0BJ,KAAK,CAACL,OAAhC,CADL,CAVJ,eAaI;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAQ,QAAA,SAAS,EAAC,sBAAlB;AAAyC,QAAA,OAAO,EAAEK,KAAK,CAACa,mBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAbJ,CADJ,CADJ,eAuBI;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKb,KAAK,IAAI;AACN,eACIA,KAAK,CAACc,YAAN,GACId,KAAK,CAACe,WAAN,CAAkBlB,MAAlB,CAA0BmB,OAAD,IAAaA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuBlB,KAAK,CAACc,YAAN,CAAmBK,WAAnB,EAAvB,CAAtC,EACKvB,GADL,CACSoB,OAAO,IAAI;AAAE,8BAAO,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAEA,OAAO,CAACI,EAAtB;AAA0B,YAAA,OAAO,EAAEJ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAAuD,SAD7E,CADJ,GAGIhB,KAAK,CAACe,WAAN,CAAkBnB,GAAlB,CAAsBoB,OAAO,IAAI;AAAE,8BAAO,oBAAC,OAAD;AAAS,YAAA,GAAG,EAAEA,OAAO,CAACI,EAAtB;AAA0B,YAAA,OAAO,EAAEJ,OAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAAuD,SAA1F,CAJR;AAOH,OATL,CADJ,CAvBJ,CAFJ,CADJ;AA6CH,KAhDT,CADJ;AAsDH;;AAjH+C,C,CAsHpD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from 'react';\nimport NavBarView from './NavBarView';\nimport { ProductConsumer } from '../Data/Context';\nimport Product from '../Components/Product';\n\n\n\nexport default class ShoppingView extends Component {\n    selectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'BRAND' ?\n\n                        filter.values.map((value) => <option key={value.value}>{value.value}</option>) : null\n                )\n\n            })\n        )\n    }\n    ColorSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'COLOUR' ?\n\n                        filter.values.map((value) => <option key={value.color}>{value.title}</option>) : null\n                )\n\n            })\n        )\n    }\n    maxPriceSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'PRICE' ?\n\n                        filter.values.map((value) => {\n                            return (\n                                value.key > 2000 || value.key === \"Max\" ?\n                                    <option key={value.key}>{value.displayValue}</option> : null)\n                        }) : null\n                )\n\n            })\n        )\n    }\n    minpriceSelectMapper = (filters) => {\n        return (\n            filters.map((filter) => {\n                return (\n                    filter.type === 'PRICE' ?\n\n                        filter.values.map((value) => {\n                            return (\n                                value.key < 2000 || value.key === \"Min\" ?\n                                    <option key={value.key}>{value.displayValue}</option> : null)\n                        }) : null\n                )\n\n            })\n        )\n    }\n\n    render() {\n        return (\n            <ProductConsumer>\n                {\n                    value => {\n                        return (\n                            <React.Fragment>\n                                <NavBarView searchOnchangeHandler={value.searchOnchangeHandler} />\n                                <div className=\"bottom-container\">\n                                    <div className=\"bottom-container-left\">\n                                        <div className=\"price-filter-wrapper\">\n                                            <select className=\"brand-select\" onChange={(e) => value.brandSelectOnChangeHandler(e.target.value)}>\n                                                {this.selectMapper(value.filters)}\n                                            </select>\n                                            <select className=\"color-select\" >\n                                                {this.ColorSelectMapper(value.filters)}\n                                            </select>\n                                            <select>\n                                                {this.minpriceSelectMapper(value.filters)}\n                                            </select>\n                                            <select>\n                                                {this.maxPriceSelectMapper(value.filters)}\n                                            </select>\n                                            <div className=\"filter-submit-button-wrapper\">\n                                                <button className=\"filter-submit-button\" onClick={value.filterSubmitHandler} >Filter</button>\n                                            </div>\n                                        </div>\n\n                                    </div>\n\n\n                                    <div className=\"bottom-container-right\">\n                                        <ProductConsumer>\n                                            {value => {\n                                                return (\n                                                    value.searchString ?\n                                                        value.productData.filter((product) => product.brand.includes(value.searchString.toLowerCase()))\n                                                            .map(product => { return <Product key={product.id} product={product} /> }) :\n                                                        value.productData.map(product => { return <Product key={product.id} product={product} /> })\n\n                                                )\n                                            }}\n                                        </ProductConsumer>\n\n\n\n                                    </div>\n                                </div>\n                            </React.Fragment>\n                        )\n                    }\n                }\n\n            </ProductConsumer>\n        )\n    }\n}\n\n\n\n// const ShoppingView = (payload) => {\n//     const { productData, searchOnchangeHandler, searchString, filters, brandSelectOnChangeHandler, filterSubmitHandler } = payload;\n//     const selectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'BRAND' ?\n\n//                         filter.values.map((value) => <option key={value.value}>{value.value}</option>) : null\n//                 )\n\n//             })\n//         )\n\n//         /*filter.type === 'BRAND' ?\n\n//                     filter.values.map((value) => <option>valeu</option>)\n\n//                     : null) */\n//     }\n//     const ColorSelectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'COLOUR' ?\n\n//                         filter.values.map((value) => <option key={value.color}>{value.title}</option>) : null\n//                 )\n\n//             })\n//         )\n//     }\n//     const maxPriceSelectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'PRICE' ?\n\n//                         filter.values.map((value) => {\n//                             return (\n//                                 value.key > 2000 || value.key === \"Max\" ?\n//                                     <option key={value.key}>{value.displayValue}</option> : null)\n//                         }) : null\n//                 )\n\n//             })\n//         )\n//     }\n\n//     const minpriceSelectMapper = (filters) => {\n//         return (\n//             filters.map((filter) => {\n//                 return (\n//                     filter.type === 'PRICE' ?\n\n//                         filter.values.map((value) => {\n//                             return (\n//                                 value.key < 2000 || value.key === \"Min\" ?\n//                                     <option key={value.key}>{value.displayValue}</option> : null)\n//                         }) : null\n//                 )\n\n//             })\n//         )\n//     }\n\n//     return (\n//         <React.Fragment>\n//             <NavBarView searchOnchangeHandler={searchOnchangeHandler} />\n//             <div className=\"bottom-container\">\n//                 <div className=\"bottom-container-left\">\n//                     <div className=\"price-filter-wrapper\">\n//                         <select className=\"brand-select\" onChange={(e) => brandSelectOnChangeHandler(e.target.value)}>\n//                             {\n//                                 selectMapper(filters)\n//                             }\n//                         </select>\n//                         <select className=\"color-select\" >\n//                             {ColorSelectMapper(filters)}\n//                         </select>\n//                         <select>\n//                             {minpriceSelectMapper(filters)}\n//                         </select>\n//                         <select>\n//                             {maxPriceSelectMapper(filters)}\n//                         </select>\n//                         <div className=\"filter-submit-button-wrapper\">\n//                             <button className=\"filter-submit-button\" onClick={filterSubmitHandler} >Filter</button>\n//                         </div>\n//                     </div>\n\n//                 </div>\n\n\n//                 <div className=\"bottom-container-right\">\n//                     <ProductConsumer>\n//                         {value => {\n//                             return (\n//                                 searchString ?\n//                                     value.productData.filter((product) => product.brand.includes(searchString.toLowerCase()))\n//                                         .map(product => { return <Product key={product.id} product={product} /> }) :\n//                                     value.productData.map(product => { return <Product key={product.id} product={product} /> })\n\n//                             )\n//                         }}\n//                     </ProductConsumer>\n\n\n\n//                 </div>\n//             </div>\n//         </React.Fragment>\n//     )\n// }\n\n// export default ShoppingView;\n\n\n"]},"metadata":{},"sourceType":"module"}