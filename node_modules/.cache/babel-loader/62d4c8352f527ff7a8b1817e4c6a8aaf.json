{"ast":null,"code":"var _jsxFileName = \"/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      productData: [],\n      filters: [],\n      cartElements: [],\n      cartCount: 0,\n      totalItemCount: [],\n      individualPrices: []\n    };\n\n    this.searchOnchangeHandler = searchString => {\n      this.setState({\n        searchString: searchString\n      });\n    };\n\n    this.totalItemCountFinder = id => {\n      const totalItemCount = [...this.state.totalItemCount];\n      const index = totalItemCount.findIndex(item => item.id === id);\n      return totalItemCount[index].quantity;\n    };\n\n    this.individualItemPriceCalculator = id => {\n      const productData = [...this.state.productData];\n      const productDataIndex = productData.findIndex(item => item.id === id);\n      const price = productData[productDataIndex].price.final_price;\n      const totalItemCount = [...this.state.totalItemCount];\n      const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n      const count = totalItemCount[totalItemCountIndex].quantity;\n      const final_price = price * count; // this.setState({ hello: \"hello\" })\n      // this.updateIndividualPrices(final_price)\n\n      return final_price;\n    };\n\n    this.updateIndividualPrices = price => {\n      this.setState({\n        individualPrices: [...this.state.individualPrices, price]\n      });\n    };\n\n    this.totalItemCountIncrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.totalItemCountDecrementHandler = id => {\n      this.setState(prevState => {\n        const totalItemCount = [...prevState.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n        totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n        return {\n          totalItemCount\n        };\n      });\n    };\n\n    this.handleDetails = () => {\n      console.log(\"hello from detail\");\n    };\n\n    this.handleAddtoCard = id => {\n      let allAddedElements = [...this.state.cartElements];\n\n      if (allAddedElements.indexOf(id) === -1) {\n        const array = [...this.state.cartElements, id];\n        this.setState({\n          cartElements: array,\n          cartCount: this.state.cartCount + 1\n        });\n      } else {\n        alert(\"Item already added to cart! Please navigate to cart to update the quantity\");\n      }\n\n      this.totalItemCountIncrementHandler(id); // this.setState({ cartElements: allAddedElements })\n      // const array = [...this.state.cartElements, id];\n      // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n    };\n  }\n\n  componentDidMount() {\n    axios.get(\"https://xebiascart.herokuapp.com/products\").then(response => {\n      this.setState({\n        productData: response.data\n      });\n      this.state.productData.forEach(product => {\n        return this.setState({\n          totalItemCount: [...this.state.totalItemCount, {\n            id: product.id,\n            quantity: 0\n          }]\n        });\n      });\n      console.log(this.state.totalItemCount);\n    });\n    axios.get(\"https://xebiascart.herokuapp.com/filters\").then(response => {\n      this.setState({\n        filters: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetails: this.handleDetails,\n        handleAddtoCard: this.handleAddtoCard,\n        totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n        totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n        totalItemCountFinder: this.totalItemCountFinder,\n        individualItemPriceCalculator: this.individualItemPriceCalculator\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/rajatrajivsharma/Desktop/ShoppeR/Shoppe/src/Data/Context.js"],"names":["React","Component","axios","ProductContext","createContext","ProductProvider","state","productData","filters","cartElements","cartCount","totalItemCount","individualPrices","searchOnchangeHandler","searchString","setState","totalItemCountFinder","id","index","findIndex","item","quantity","individualItemPriceCalculator","productDataIndex","price","final_price","totalItemCountIndex","count","updateIndividualPrices","totalItemCountIncrementHandler","prevState","totalItemCountDecrementHandler","handleDetails","console","log","handleAddtoCard","allAddedElements","indexOf","array","alert","componentDidMount","get","then","response","data","forEach","product","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n\n    state = {\n        productData: [],\n        filters: [],\n        cartElements: [],\n        cartCount: 0,\n        totalItemCount: [],\n        individualPrices: []\n    }\n\n    componentDidMount() {\n        axios.get(\"https://xebiascart.herokuapp.com/products\")\n            .then((response) => {\n                this.setState({ productData: response.data })\n\n                this.state.productData.forEach((product) => {\n                    return (\n                        this.setState({ totalItemCount: [...this.state.totalItemCount, { id: product.id, quantity: 0 }] })\n                    )\n                })\n                console.log(this.state.totalItemCount)\n\n            })\n        axios.get(\"https://xebiascart.herokuapp.com/filters\")\n            .then((response) => {\n\n                this.setState({ filters: response.data })\n            })\n    }\n\n    searchOnchangeHandler = (searchString) => {\n        this.setState({ searchString: searchString });\n\n    }\n\n    totalItemCountFinder = (id) => {\n        const totalItemCount = [...this.state.totalItemCount];\n        const index = totalItemCount.findIndex(item => item.id === id);\n\n        return (totalItemCount[index].quantity)\n    }\n    individualItemPriceCalculator = (id) => {\n        const productData = [...this.state.productData];\n        const productDataIndex = productData.findIndex(item => item.id === id);\n        const price = productData[productDataIndex].price.final_price;\n\n        const totalItemCount = [...this.state.totalItemCount];\n        const totalItemCountIndex = totalItemCount.findIndex(item => item.id === id);\n        const count = totalItemCount[totalItemCountIndex].quantity;\n\n        const final_price = price * count;\n        // this.setState({ hello: \"hello\" })\n\n        // this.updateIndividualPrices(final_price)\n\n        return final_price;\n    }\n\n    updateIndividualPrices = (price) => {\n        this.setState({ individualPrices: [...this.state.individualPrices, price] })\n    }\n\n    totalItemCountIncrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity + 1 <= 10 ? totalItemCount[index].quantity + 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n        })\n\n    }\n    totalItemCountDecrementHandler = (id) => {\n\n        this.setState(prevState => {\n            const totalItemCount = [...prevState.totalItemCount];\n            const index = totalItemCount.findIndex(item => item.id === id);\n\n            totalItemCount[index].quantity = totalItemCount[index].quantity - 1 > 0 ? totalItemCount[index].quantity - 1 : totalItemCount[index].quantity;\n            return { totalItemCount }\n\n        })\n\n    }\n    handleDetails = () => {\n        console.log(\"hello from detail\")\n    }\n\n    handleAddtoCard = (id) => {\n        let allAddedElements = [...this.state.cartElements];\n\n        if (allAddedElements.indexOf(id) === -1) {\n            const array = [...this.state.cartElements, id];\n            this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n        } else {\n            alert(\"Item already added to cart! Please navigate to cart to update the quantity\")\n        }\n        this.totalItemCountIncrementHandler(id)\n        // this.setState({ cartElements: allAddedElements })\n        // const array = [...this.state.cartElements, id];\n        // this.setState({ cartElements: array, cartCount: this.state.cartCount + 1 })\n\n\n\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state,\n                handleDetails: this.handleDetails,\n                handleAddtoCard: this.handleAddtoCard,\n                totalItemCountIncrementHandler: this.totalItemCountIncrementHandler,\n                totalItemCountDecrementHandler: this.totalItemCountDecrementHandler,\n                totalItemCountFinder: this.totalItemCountFinder,\n                individualItemPriceCalculator: this.individualItemPriceCalculator\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport { ProductProvider, ProductConsumer };\n"]},"metadata":{},"sourceType":"module"}